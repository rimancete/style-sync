{
	"info": {
		"_postman_id": "9f8ce246-72da-41bb-a924-2f586372140c",
		"name": "StyleSync API",
		"description": "Clean minimal collection for StyleSync API testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15102598"
	},
	"item": [
		{
			"name": "Health & Monitoring",
			"item": [
				{
					"name": "Basic Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Returns basic health status of the StyleSync API application. This endpoint provides a quick way to verify the application is running and responsive."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"uptime\": 123456789,\n  \"details\": {\n    \"message\": \"StyleSync API is running\"\n  }\n}"
						}
					]
				},
				{
					"name": "Database Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health/database",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health",
								"database"
							]
						},
						"description": "Checks the database connection status and returns connection information. This endpoint verifies that the application can successfully connect to and query the PostgreSQL database."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health/database",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health",
										"database"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"database\": {\n    \"connected\": true,\n    \"connectionInfo\": {\n      \"database_name\": \"stylesync\",\n      \"user_name\": \"stylesync\",\n      \"version\": \"PostgreSQL 15.14\",\n      \"timestamp\": \"2024-01-15T10:30:00.000Z\"\n    }\n  }\n}"
						},
						{
							"name": "Error Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health/database",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health",
										"database"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"error\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"database\": {\n    \"connected\": false,\n    \"error\": \"Connection timeout\"\n  }\n}"
						}
					]
				},
				{
					"name": "Detailed Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health/detailed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health",
								"detailed"
							]
						},
						"description": "Returns comprehensive health information including application details, database status, and system metrics. This endpoint provides detailed diagnostics for monitoring and troubleshooting."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/health/detailed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"health",
										"detailed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"application\": {\n    \"name\": \"StyleSync API\",\n    \"version\": \"1.0.0\",\n    \"environment\": \"development\",\n    \"uptime\": 123456789,\n    \"memoryUsage\": {\n      \"rss\": 45678912,\n      \"heapTotal\": 34567890,\n      \"heapUsed\": 23456789,\n      \"external\": 1234567\n    }\n  },\n  \"database\": {\n    \"connected\": true,\n    \"connectionInfo\": {\n      \"database_name\": \"stylesync\",\n      \"user_name\": \"stylesync\",\n      \"version\": \"PostgreSQL 15.14\"\n    }\n  },\n  \"system\": {\n    \"platform\": \"linux\",\n    \"nodeVersion\": \"v18.17.0\",\n    \"cpuArch\": \"x64\",\n    \"totalMemory\": 8589934592,\n    \"freeMemory\": 2147483648\n  }\n}"
						}
					]
				}
			],
			"description": "Application and system health check endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const json = pm.response.json();",
									"    pm.collectionVariables.set('authToken', json.data.token);",
									"    pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"    console.log('Tokens saved successfully');",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@stylesync.com\",\n  \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customer(acme) Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const json = pm.response.json();",
									"    pm.collectionVariables.set('authToken', json.data.token);",
									"    pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"    console.log('Tokens saved successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@acme.com\",\n  \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const json = pm.response.json();",
									"    pm.collectionVariables.set('authToken', json.data.token);",
									"    pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"    console.log('Tokens saved successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"client@test.com\",\n  \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const json = pm.response.json();",
									"    pm.collectionVariables.set('authToken', json.data.token);",
									"    pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"    if (json.data.defaultCustomerId) {",
									"        pm.collectionVariables.set('customerId', json.data.defaultCustomerId);",
									"    }",
									"    console.log('Registration successful, tokens saved');",
									"    console.log('Available customers:', json.data.customers.length);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"multitenant@test.com\",\n  \"password\": \"TestPassword123!\",\n  \"name\": \"Multi Tenant User\",\n  \"phone\": \"+1234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const json = pm.response.json();",
									"    pm.collectionVariables.set('authToken', json.data.token);",
									"    pm.collectionVariables.set('refreshToken', json.data.refreshToken);",
									"    console.log('Tokens refreshed successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refreshToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Countries",
			"item": [
				{
					"name": "List All Countries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Admin endpoint. Retrieves a list of all countries with their address format configurations."
					},
					"response": []
				},
				{
					"name": "Create Country",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"DE\",\n  \"name\": \"Germany\",\n  \"addressFormat\": {\n    \"fields\": [\"street\", \"city\", \"postalCode\"],\n    \"required\": [\"street\", \"city\", \"postalCode\"],\n    \"validation\": {\n      \"postalCode\": \"^[0-9]{5}$\"\n    },\n    \"labels\": {\n      \"street\": \"Straße\",\n      \"city\": \"Stadt\",\n      \"postalCode\": \"PLZ\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Country by Code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/countries/code/BR",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"code",
								"BR"
							]
						},
						"description": "Admin endpoint. Retrieves country information and address format rules by ISO 3166-1 alpha-2 code."
					},
					"response": []
				},
				{
					"name": "Get Country by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/countries/clm1234567890abcdef",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"clm1234567890abcdef"
							]
						},
						"description": "Admin endpoint. Retrieves country information by its unique ID."
					},
					"response": []
				},
				{
					"name": "Update Country",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Brazil - Updated\",\n  \"addressFormat\": {\n    \"fields\": [\"street\", \"district\", \"city\", \"stateProvince\", \"postalCode\"],\n    \"required\": [\"street\", \"city\", \"stateProvince\", \"postalCode\"],\n    \"validation\": {\n      \"postalCode\": \"^[0-9]{5}-[0-9]{3}$\"\n    },\n    \"labels\": {\n      \"street\": \"Rua\",\n      \"district\": \"Bairro\",\n      \"city\": \"Cidade\",\n      \"stateProvince\": \"Estado\",\n      \"postalCode\": \"CEP\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/countries/clm1234567890abcdef",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"clm1234567890abcdef"
							]
						},
						"description": "Admin endpoint. Updates country information and address format configuration."
					},
					"response": []
				},
				{
					"name": "Delete Country",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/countries/clm1234567890abcdef",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"clm1234567890abcdef"
							]
						},
						"description": "Admin endpoint. Deletes a country from the system. Only possible if the country has no associated branches."
					},
					"response": []
				}
			]
		},
		{
			"name": "Multi-Tenant Authentication",
			"item": [
				{
					"name": "Get My Customers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/my-customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								"my-customers"
							]
						},
						"description": "Retrieve all customers the authenticated user has access to. Returns customer summaries with id, name, urlSlug, and logoUrl."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/my-customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										"my-customers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"customer_acme\",\n      \"name\": \"Acme Barbershop\",\n      \"urlSlug\": \"acme\",\n      \"logoUrl\": \"https://cdn.example.com/acme/logo.png\"\n    },\n    {\n      \"id\": \"customer_elite\",\n      \"name\": \"Elite Cuts\",\n      \"urlSlug\": \"elite-cuts\",\n      \"logoUrl\": \"https://cdn.example.com/elite/logo.png\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Validate Customer Context",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/context/{{customerSlug}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								"context",
								"{{customerSlug}}"
							]
						},
						"description": "Validate customer context and retrieve customer information. Used for URL-based customer recognition in /salon/{customer-slug} routes."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/context/acme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										"context",
										"acme"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"customer_acme\",\n    \"name\": \"Acme Barbershop\",\n    \"urlSlug\": \"acme\",\n    \"logoUrl\": \"https://cdn.example.com/acme/logo.png\"\n  }\n}"
						},
						{
							"name": "Customer Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/context/nonexistent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										"context",
										"nonexistent"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 404,\n  \"message\": \"Customer not found: nonexistent\"\n}"
						}
					]
				}
			],
			"description": "Enhanced authentication with customer context and URL-based access"
		},
		{
			"name": "Customer Branding",
			"item": [
				{
					"name": "Get Customer Branding",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/customers/branding/:urlSlug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								"branding",
								":urlSlug"
							],
							"variable": [
								{
									"key": "urlSlug",
									"value": "acme",
									"description": "Customer URL slug (e.g., acme, elite-cuts)"
								}
							]
						},
						"description": "Get customer branding configuration by URL slug. Public endpoint - no authentication required."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customers/branding/:urlSlug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										"branding",
										":urlSlug"
									],
									"variable": [
										{
											"key": "urlSlug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"customer-id\",\n    \"name\": \"Acme Barbershop\",\n    \"urlSlug\": \"acme\",\n    \"branding\": {\n      \"documentTitle\": \"Acme Barbershop - Premium Haircuts\",\n      \"theme\": {\n        \"light\": {\n          \"logoAlt\": \"Acme Barbershop\",\n          \"primary\": {\n            \"main\": \"#1E40AF\",\n            \"light\": \"#3B82F6\",\n            \"dark\": \"#1E3A8A\",\n            \"contrast\": \"#FFFFFF\"\n          },\n          \"secondary\": {\n            \"main\": \"#8D8C8BFF\",\n            \"light\": \"#E7E7E6FF\",\n            \"dark\": \"#3B3B3BFF\",\n            \"contrast\": \"#1B1B1BFF\"\n          },\n          \"background\": \"#F8FAFC\"\n        }\n      }\n    },\n    \"isActive\": true\n  }\n}"
						},
						{
							"name": "Not Found Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customers/branding/:urlSlug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										"branding",
										":urlSlug"
									],
									"variable": [
										{
											"key": "urlSlug"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 404,\n  \"message\": \"Customer with URL slug 'nonexistent' not found\"\n}"
						}
					]
				},
				{
					"name": "Update Customer Branding",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"documentTitle\": \"Acme Barbershop - Premium Haircuts & Styling\",\n  \"logoAlt\": \"Acme Premium Barbershop\",\n  \"theme\": {\n    \"light\": {\n      \"primary\": {\n        \"main\": \"#1E40AF\",\n        \"light\": \"#3B82F6\",\n        \"dark\": \"#1E3A8A\",\n        \"contrast\": \"#FFFFFF\"\n      },\n      \"background\": \"#F8FAFC\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/branding/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"branding",
								"config"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}",
									"description": "Customer ID (UUID format)"
								}
							]
						},
						"description": "Update customer branding configuration. Admin only - requires authentication."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"documentTitle\": \"Acme Barbershop - Premium Haircuts & Styling\",\n  \"logoAlt\": \"Acme Premium Barbershop\",\n  \"theme\": {\n    \"light\": {\n      \"primary\": {\n        \"main\": \"#1E40AF\",\n        \"light\": \"#3B82F6\",\n        \"dark\": \"#1E3A8A\",\n        \"contrast\": \"#FFFFFF\"\n      },\n      \"background\": \"#F8FAFC\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/branding/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"branding",
										"config"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"customer-id\",\n    \"name\": \"Acme Barbershop\",\n    \"urlSlug\": \"acme\",\n    \"branding\": {\n      \"documentTitle\": \"Acme Barbershop - Premium Haircuts & Styling\",\n      \"theme\": {\n        \"light\": {\n          \"logoAlt\": \"Acme Premium Barbershop\",\n          \"primary\": {\n            \"main\": \"#1E40AF\",\n            \"light\": \"#3B82F6\",\n            \"dark\": \"#1E3A8A\",\n            \"contrast\": \"#FFFFFF\"\n          },\n          \"secondary\": {\n            \"main\": \"#8D8C8BFF\",\n            \"light\": \"#E7E7E6FF\",\n            \"dark\": \"#3B3B3BFF\",\n            \"contrast\": \"#1B1B1BFF\"\n          },\n          \"background\": \"#F8FAFC\"\n        }\n      }\n    },\n    \"isActive\": true\n  }\n}"
						},
						{
							"name": "Unauthorized Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"documentTitle\": \"Test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/branding/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"branding",
										"config"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": 401,\n  \"message\": \"Unauthorized\"\n}"
						}
					]
				},
				{
					"name": "Create Customer Branding with Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const json = pm.response.json();",
									"    console.log('✅ Branding created successfully with files');",
									"    if (json.data.branding.theme.light.logoUrl) {",
									"        console.log('🖼️ Logo URL:', json.data.branding.theme.light.logoUrl);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "logo",
									"description": "Logo image file (PNG, JPG, JPEG, SVG, WebP - max 5MB)",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/clipboard-health_logo.png"
								},
								{
									"key": "favicon32x32",
									"description": "32x32 favicon file (ICO, PNG - max 1MB)",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/clipboard-favicon_test/favicon-32x32.png"
								},
								{
									"key": "favicon16x16",
									"description": "16x16 favicon file (ICO, PNG - max 1MB)",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/clipboard-favicon_test/favicon-16x16.png"
								},
								{
									"key": "appleTouch",
									"description": "Apple touch icon file (PNG, JPG, JPEG - max 2MB)",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/clipboard-favicon_test/apple-touch-icon.png"
								},
								{
									"key": "config",
									"value": "{\"documentTitle\": \"My Barbershop\", \"logoAlt\": \"My Logo\", \"theme\": {\"light\": {\"primary\": {\"main\": \"#1E40AF\"}}}}",
									"description": "JSON configuration for branding (optional)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/branding",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"branding"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}",
									"description": "Customer ID"
								}
							]
						},
						"description": "Initial customer branding setup with file uploads and configuration. ⚠️ ADMIN ONLY ⚠️ Rate limited to 3 requests per minute."
					},
					"response": []
				},
				{
					"name": "Update Customer Branding Files Only",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const json = pm.response.json();",
									"    console.log('✅ Branding files updated successfully');",
									"    if (json.data.branding.theme.light.logoUrl) {",
									"        console.log('🖼️ New logo URL:', json.data.branding.theme.light.logoUrl);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "logo",
									"description": "Updated logo image file",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/truck-app-logo.svg"
								},
								{
									"key": "favicon32x32",
									"description": "Updated 32x32 favicon file",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/truck-page-favicon_test/favicon-32x32.png"
								},
								{
									"key": "favicon16x16",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/truck-page-favicon_test/favicon-16x16.png",
									"disabled": true
								},
								{
									"key": "appleTouch",
									"type": "file",
									"src": "/home/pudico/Pictures/dev/style-sync/truck-page-favicon_test/apple-touch-icon.png",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/branding/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"branding",
								"upload"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}",
									"description": "Customer ID"
								}
							]
						},
						"description": "Update customer branding files without changing configuration. ⚠️ ADMIN ONLY ⚠️ Rate limited to 5 requests per minute."
					},
					"response": []
				}
			]
		},
		{
			"name": "Branches Management",
			"item": [
				{
					"name": "Branches - Admin",
					"item": [
						{
							"name": "List All Branches",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/branches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"branches"
									]
								},
								"description": "Admin endpoint. Retrieves a list of all active branches with their customer relationships."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"branches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\",\n        \"countryCode\": \"BR\",\n        \"street\": \"Rua das Flores\",\n        \"unit\": \"123\",\n        \"district\": \"Centro\",\n        \"city\": \"São Paulo\",\n        \"stateProvince\": \"SP\",\n        \"postalCode\": \"01234-567\",\n        \"formattedAddress\": \"Rua das Flores, 123, Centro, São Paulo, SP 01234-567, BR\",\n        \"phone\": \"(11) 98765-4321\",\n        \"createdAt\": \"2025-09-13T14:05:22.068Z\",\n        \"deletedAt\": null\n      }\n    ],\n    \"total\": 1\n  }\n}"
								}
							]
						},
						{
							"name": "Create Branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const json = pm.response.json();",
											"    pm.collectionVariables.set('branchId', json.data.id);",
											"    console.log('Branch created, ID saved:', json.data.id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Unidade Centro\",\n  \"countryCode\": \"BR\",\n  \"street\": \"Rua Principal, 123\",\n  \"district\": \"Centro\",\n  \"city\": \"São Paulo\",\n  \"stateProvince\": \"SP\",\n  \"postalCode\": \"01234-567\",\n  \"phone\": \"(11) 99999-9999\",\n  \"customerId\": \"customer-id-here\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/branches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"branches"
									]
								},
								"description": "Admin endpoint. Creates a new branch location associated with a customer."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Unidade Centro\",\n  \"countryCode\": \"BR\",\n  \"street\": \"Rua Principal, 123\",\n  \"district\": \"Centro\",\n  \"city\": \"São Paulo\",\n  \"stateProvince\": \"SP\",\n  \"postalCode\": \"01234-567\",\n  \"phone\": \"(11) 99999-9999\",\n  \"customerId\": \"customer-id-here\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"branches"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"branch-id\",\n    \"name\": \"Unidade Centro\",\n    \"countryCode\": \"BR\",\n    \"street\": \"Rua Principal, 123\",\n    \"district\": \"Centro\",\n    \"city\": \"São Paulo\",\n    \"stateProvince\": \"SP\",\n    \"postalCode\": \"01234-567\",\n    \"formattedAddress\": \"Rua Principal, 123, Centro, São Paulo, SP 01234-567, BR\",\n    \"phone\": \"(11) 99999-9999\",\n    \"createdAt\": \"2025-09-13T15:00:00.000Z\",\n    \"deletedAt\": null\n  }\n}"
								}
							]
						},
						{
							"name": "Get Branch by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/branches/{{branchId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"branches",
										"{{branchId}}"
									]
								},
								"description": "Admin endpoint. Retrieves detailed information about a specific branch by its ID."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/branches/{{branchId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"branches",
												"{{branchId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"branch-id\",\n    \"name\": \"Unidade Centro\",\n    \"countryCode\": \"BR\",\n    \"street\": \"Rua Principal, 123\",\n    \"district\": \"Centro\",\n    \"city\": \"São Paulo\",\n    \"stateProvince\": \"SP\",\n    \"postalCode\": \"01234-567\",\n    \"formattedAddress\": \"Rua Principal, 123, Centro, São Paulo, SP 01234-567, BR\",\n    \"phone\": \"(11) 99999-9999\",\n    \"createdAt\": \"2025-09-13T15:00:00.000Z\",\n    \"deletedAt\": null\n  }\n}"
								}
							]
						},
						{
							"name": "Update Branch",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Unidade Centro - Atualizada\",\n  \"city\": \"Rio de Janeiro\",\n  \"stateProvince\": \"RJ\",\n  \"phone\": \"(21) 99999-9999\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/branches/{{branchId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"branches",
										"{{branchId}}"
									]
								},
								"description": "Admin endpoint. Updates branch information. Only address fields can be modified."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Unidade Centro - Atualizada\",\n  \"city\": \"Rio de Janeiro\",\n  \"stateProvince\": \"RJ\",\n  \"phone\": \"(21) 99999-9999\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/branches/{{branchId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"branches",
												"{{branchId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"branch-id\",\n    \"name\": \"Unidade Centro - Atualizada\",\n    \"countryCode\": \"BR\",\n    \"street\": \"Rua Principal, 123\",\n    \"district\": \"Centro\",\n    \"city\": \"Rio de Janeiro\",\n    \"stateProvince\": \"RJ\",\n    \"postalCode\": \"01234-567\",\n    \"formattedAddress\": \"Rua Principal, 123, Centro, Rio de Janeiro, RJ 01234-567, BR\",\n    \"phone\": \"(21) 99999-9999\",\n    \"createdAt\": \"2025-09-13T15:00:00.000Z\",\n    \"deletedAt\": null\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Branch",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/branches/{{branchId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"branches",
										"{{branchId}}"
									]
								},
								"description": "Admin endpoint. Soft deletes a branch. Only possible if the branch has no associated professionals, bookings, or service pricing."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/branches/{{branchId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"branches",
												"{{branchId}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/branches/{{branchId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"branches",
												"{{branchId}}"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 409,\n  \"message\": \"Cannot delete branch with associated professionals\"\n}"
								}
							]
						}
					],
					"description": "System-wide branch management (Platform Admin only)"
				},
				{
					"name": "Branches - Customer",
					"item": [
						{
							"name": "Create Customer Branch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const json = pm.response.json();",
											"    pm.collectionVariables.set('branchId', json.data.id);",
											"    console.log('Customer branch created, ID saved:', json.data.id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Downtown Location\",\n  \"countryCode\": \"BR\",\n  \"street\": \"Rua Principal, 456\",\n  \"district\": \"Centro\",\n  \"city\": \"São Paulo\",\n  \"stateProvince\": \"SP\",\n  \"postalCode\": \"01234-567\",\n  \"phone\": \"(11) 98765-4321\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/branches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"branches"
									]
								},
								"description": "Creates a new branch for the current customer. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can create branches. Customer ID is automatically determined from URL context."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Downtown Location\",\n  \"countryCode\": \"BR\",\n  \"street\": \"Rua Principal, 456\",\n  \"district\": \"Centro\",\n  \"city\": \"São Paulo\",\n  \"stateProvince\": \"SP\",\n  \"postalCode\": \"01234-567\",\n  \"phone\": \"(11) 98765-4321\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"branch-new-id\",\n    \"name\": \"Downtown Location\",\n    \"countryCode\": \"BR\",\n    \"street\": \"Rua Principal, 456\",\n    \"district\": \"Centro\",\n    \"city\": \"São Paulo\",\n    \"stateProvince\": \"SP\",\n    \"postalCode\": \"01234-567\",\n    \"formattedAddress\": \"Rua Principal, 456, Centro, São Paulo, SP 01234-567, BR\",\n    \"phone\": \"(11) 98765-4321\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"deletedAt\": null\n  }\n}"
								},
								{
									"name": "Conflict Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Downtown Location\",\n  \"countryCode\": \"BR\",\n  \"street\": \"Rua Principal, 456\",\n  \"district\": \"Centro\",\n  \"city\": \"São Paulo\",\n  \"stateProvince\": \"SP\",\n  \"postalCode\": \"01234-567\",\n  \"phone\": \"(11) 98765-4321\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 409,\n  \"message\": \"Branch with this name already exists for this customer\"\n}"
								},
								{
									"name": "Forbidden Response (CLIENT role)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Downtown Location\",\n  \"countryCode\": \"BR\",\n  \"street\": \"Rua Principal, 456\",\n  \"district\": \"Centro\",\n  \"city\": \"São Paulo\",\n  \"stateProvince\": \"SP\",\n  \"postalCode\": \"01234-567\",\n  \"phone\": \"(11) 98765-4321\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 403,\n  \"message\": \"Forbidden resource\",\n  \"error\": \"Forbidden\"\n}"
								}
							]
						},
						{
							"name": "List Customer Branches",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/branches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"branches"
									]
								},
								"description": "Get branches filtered by customer context. ✅ Available to both ADMIN and CLIENT users. URL pattern: /salon/{customer-slug}/branches"
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Acme Downtown\",\n        \"countryCode\": \"BR\",\n        \"street\": \"Rua Principal, 123\",\n        \"district\": \"Centro\",\n        \"city\": \"São Paulo\",\n        \"stateProvince\": \"SP\",\n        \"postalCode\": \"01234-567\",\n        \"formattedAddress\": \"Rua Principal, 123, Centro, São Paulo, SP 01234-567, BR\",\n        \"phone\": \"(11) 99999-9999\",\n        \"createdAt\": \"2025-09-13T15:00:00.000Z\",\n        \"deletedAt\": null\n      }\n    ],\n    \"total\": 1\n  }\n}"
								},
								{
									"name": "Customer Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/nonexistent/branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"nonexistent",
												"branches"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 404,\n  \"message\": \"Customer not found: nonexistent\"\n}"
								}
							]
						},
						{
							"name": "Get Customer Branch by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/branches/{{branchId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"branches",
										"{{branchId}}"
									]
								},
								"description": "Get specific branch by ID within customer context. ✅ Available to both ADMIN and CLIENT users. URL pattern: /salon/{customer-slug}/branches/{branch-id}"
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/branch-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"branch-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"branch-id\",\n    \"name\": \"Acme Downtown\",\n    \"countryCode\": \"BR\",\n    \"street\": \"Rua Principal, 123\",\n    \"district\": \"Centro\",\n    \"city\": \"São Paulo\",\n    \"stateProvince\": \"SP\",\n    \"postalCode\": \"01234-567\",\n    \"formattedAddress\": \"Rua Principal, 123, Centro, São Paulo, SP 01234-567, BR\",\n    \"phone\": \"(11) 99999-9999\",\n    \"createdAt\": \"2025-09-13T15:00:00.000Z\",\n    \"deletedAt\": null\n  }\n}"
								}
							]
						},
						{
							"name": "Update Customer Branch",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Downtown Location - Updated\",\n  \"phone\": \"(11) 99999-8888\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/branches/{{branchId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"branches",
										"{{branchId}}"
									]
								},
								"description": "Update branch information within customer context. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can update branches. Only branches belonging to the current customer can be updated."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Downtown Location - Updated\",\n  \"phone\": \"(11) 99999-8888\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/branch-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"branch-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"branch-id\",\n    \"name\": \"Downtown Location - Updated\",\n    \"countryCode\": \"BR\",\n    \"street\": \"Rua Principal, 123\",\n    \"district\": \"Centro\",\n    \"city\": \"São Paulo\",\n    \"stateProvince\": \"SP\",\n    \"postalCode\": \"01234-567\",\n    \"formattedAddress\": \"Rua Principal, 123, Centro, São Paulo, SP 01234-567, BR\",\n    \"phone\": \"(11) 99999-8888\",\n    \"createdAt\": \"2025-09-13T15:00:00.000Z\",\n    \"deletedAt\": null\n  }\n}"
								},
								{
									"name": "Not Found Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Downtown Location - Updated\",\n  \"phone\": \"(11) 99999-8888\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/nonexistent-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"nonexistent-id"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 404,\n  \"message\": \"Branch with ID nonexistent-id not found for this customer\"\n}"
								}
							]
						},
						{
							"name": "Delete Customer Branch",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/branches/{{branchId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"branches",
										"{{branchId}}"
									]
								},
								"description": "Soft delete a branch within customer context. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can delete branches. The branch will be marked as deleted but not physically removed from the database."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/branch-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"branch-id"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/nonexistent-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"nonexistent-id"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 404,\n  \"message\": \"Branch with ID nonexistent-id not found for this customer\"\n}"
								},
								{
									"name": "Conflict Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/branch-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"branch-id"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 409,\n  \"message\": \"Cannot delete branch with associated professionals\"\n}"
								}
							]
						}
					],
					"description": "Customer-scoped branch management (ADMIN: Full CRUD, CLIENT: Read-only)"
				}
			],
			"description": "Complete branch management with admin and customer operations"
		},
		{
			"name": "Professionals Management",
			"item": [
				{
					"name": "Professionals - Admin",
					"item": [
						{
							"name": "List All Professionals",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/professionals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals"
									]
								},
								"description": "Retrieves a list of all professionals in the system. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can access this endpoint."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/professionals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"professional-id\",\n      \"name\": \"João Silva\",\n      \"photoUrl\": \"https://cdn.example.com/professionals/joao-silva.jpg\",\n      \"isActive\": true,\n      \"customerId\": \"customer-id\",\n      \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n      \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n      \"branches\": [\n        {\n          \"id\": \"branch-id\",\n          \"name\": \"Unidade 1\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"limit\": 1000\n}"
								}
							]
						},
						{
							"name": "Create Professional",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const json = pm.response.json();",
											"    pm.collectionVariables.set('professionalId', json.data.id);",
											"    console.log('Professional created, ID saved:', json.data.id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"João Silva\",\n  \"isActive\": true,\n  \"customerId\": \"{{customerId}}\",\n  \"branchIds\": [\"{{branchId}}\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/professionals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals"
									]
								},
								"description": "Creates a new professional. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can create professionals."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"João Silva\",\n  \"isActive\": true,\n  \"customerId\": \"customer-id\",\n  \"branchIds\": [\"branch-id\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/professionals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-new-id\",\n    \"name\": \"João Silva\",\n    \"photoUrl\": null,\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Conflict Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"João Silva\",\n  \"isActive\": true,\n  \"customerId\": \"customer-id\",\n  \"branchIds\": [\"branch-id\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/professionals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 409,\n  \"message\": \"Professional with this name already exists for this customer\"\n}"
								}
							]
						},
						{
							"name": "Get Professional by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/professionals/{{professionalId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals",
										"{{professionalId}}"
									]
								},
								"description": "Retrieves detailed information about a specific professional by its ID. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can access this endpoint."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/professionals/professional-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals",
												"professional-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-id\",\n    \"name\": \"João Silva\",\n    \"photoUrl\": \"https://cdn.example.com/professionals/joao-silva.jpg\",\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Update Professional",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"João Silva Updated\",\n  \"branchIds\": [\"{{branchId}}\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/professionals/{{professionalId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals",
										"{{professionalId}}"
									]
								},
								"description": "Updates information for an existing professional. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can update professionals."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"João Silva Updated\",\n  \"branchIds\": [\"branch-id\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/professionals/professional-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals",
												"professional-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-id\",\n    \"name\": \"João Silva Updated\",\n    \"photoUrl\": null,\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Upload Professional Photo",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "photo",
											"description": "Professional photo file (PNG, JPG, JPEG, SVG, WebP)",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/professionals/{{professionalId}}/photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals",
										"{{professionalId}}",
										"photo"
									]
								},
								"description": "Uploads a photo for a professional. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can upload professional photos."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "photo",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/professionals/professional-id/photo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals",
												"professional-id",
												"photo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-id\",\n    \"name\": \"João Silva\",\n    \"photoUrl\": \"https://cdn.example.com/professionals/professional-id_1234567890.jpg\",\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Delete Professional Photo",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/professionals/{{professionalId}}/photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals",
										"{{professionalId}}",
										"photo"
									]
								},
								"description": "Deletes the photo for a professional. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can delete professional photos."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/professionals/professional-id/photo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals",
												"professional-id",
												"photo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-id\",\n    \"name\": \"João Silva\",\n    \"photoUrl\": null,\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Deactivate Professional",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/professionals/{{professionalId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"professionals",
										"{{professionalId}}"
									]
								},
								"description": "Deactivates a professional from the system. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can deactivate professionals. Only possible if the professional has no associated bookings."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/professionals/professional-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals",
												"professional-id"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Conflict Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/professionals/professional-with-bookings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"professionals",
												"professional-with-bookings"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": 409,\n  \"message\": \"Cannot delete professional with associated bookings\"\n}"
								}
							]
						}
					],
					"description": "Admin-only professional management endpoints"
				},
				{
					"name": "Professionals - Customer",
					"item": [
						{
							"name": "List Customer Professionals",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/professionals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"professionals"
									]
								},
								"description": "Retrieves all professionals for the current customer context."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/professionals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"professionals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"professional-id\",\n      \"name\": \"João Silva\",\n      \"photoUrl\": \"https://cdn.example.com/professionals/joao-silva.jpg\",\n      \"isActive\": true,\n      \"customerId\": \"customer-id\",\n      \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n      \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n      \"branches\": [\n        {\n          \"id\": \"branch-id\",\n          \"name\": \"Unidade 1\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"limit\": 1000\n}"
								}
							]
						},
						{
							"name": "Create Customer Professional",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const json = pm.response.json();",
											"    pm.collectionVariables.set('professionalId', json.data.id);",
											"    console.log('Customer professional created, ID saved:', json.data.id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Maria Santos\",\n  \"isActive\": true,\n  \"branchIds\": [\"{{branchId}}\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/professionals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"professionals"
									]
								},
								"description": "Creates a new professional for the current customer context. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can create professionals. Customer ID is automatically determined from URL context."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Maria Santos\",\n  \"isActive\": true,\n  \"branchIds\": [\"branch-id\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/professionals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"professionals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-new-id\",\n    \"name\": \"Maria Santos\",\n    \"photoUrl\": null,\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Get Customer Professional by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/professionals/{{professionalId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"professionals",
										"{{professionalId}}"
									]
								},
								"description": "Retrieves a specific professional within the customer context."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/professionals/professional-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"professionals",
												"professional-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-id\",\n    \"name\": \"João Silva\",\n    \"photoUrl\": \"https://cdn.example.com/professionals/joao-silva.jpg\",\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Update Customer Professional",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"João Silva Updated\",\n  \"branchIds\": [\"{{branchId}}\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/professionals/{{professionalId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"professionals",
										"{{professionalId}}"
									]
								},
								"description": "Updates a professional within the customer context. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can update professionals."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"João Silva Updated\",\n  \"branchIds\": [\"branch-id\"]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/salon/acme/professionals/professional-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"professionals",
												"professional-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"professional-id\",\n    \"name\": \"João Silva Updated\",\n    \"photoUrl\": null,\n    \"isActive\": true,\n    \"customerId\": \"customer-id\",\n    \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n    \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n    \"branches\": [\n      {\n        \"id\": \"branch-id\",\n        \"name\": \"Unidade 1\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Deactivate Customer Professional",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/professionals/{{professionalId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"professionals",
										"{{professionalId}}"
									]
								},
								"description": "Deactivates a professional within the customer context. ⚠️ ADMIN ROLE REQUIRED ⚠️ Only ADMIN users can deactivate professionals."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/professionals/professional-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"professionals",
												"professional-id"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"description": "Customer-scoped professional management (ADMIN: Full CRUD, CLIENT: Read-only)"
				},
				{
					"name": "Professionals - Branch",
					"item": [
						{
							"name": "List Branch Professionals",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/salon/{{customerSlug}}/branches/{{branchId}}/professionals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"salon",
										"{{customerSlug}}",
										"branches",
										"{{branchId}}",
										"professionals"
									]
								},
								"description": "Retrieves all active professionals working at a specific branch within the customer context."
							},
							"response": [
								{
									"name": "Success Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/salon/acme/branches/branch-id/professionals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"salon",
												"acme",
												"branches",
												"branch-id",
												"professionals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"professional-id\",\n      \"name\": \"João Silva\",\n      \"photoUrl\": \"https://cdn.example.com/professionals/joao-silva.jpg\",\n      \"isActive\": true,\n      \"customerId\": \"customer-id\",\n      \"createdAt\": \"2025-09-19T15:00:00.000Z\",\n      \"updatedAt\": \"2025-09-19T15:00:00.000Z\",\n      \"branches\": [\n        {\n          \"id\": \"branch-id\",\n          \"name\": \"Unidade 1\"\n        }\n      ]\n    }\n  ],\n  \"total\": 1,\n  \"page\": 1,\n  \"limit\": 1000\n}"
								}
							]
						}
					],
					"description": "Branch-specific professional queries"
				}
			],
			"description": "Complete professional management with admin, customer, and branch-specific operations"
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3001/api",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "branchId",
			"value": "",
			"type": "string"
		},
		{
			"key": "customerId",
			"value": "",
			"type": "string"
		},
		{
			"key": "customerSlug",
			"value": "acme",
			"type": "string"
		},
		{
			"key": "professionalId",
			"value": ""
		}
	]
}